import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.0'
    id 'maven-publish'
    id 'java-library'
}

version = "2.7.2"

dependencies {
    implementation 'com.github.NLthijs48:InteractiveMessenger:e7749258ca'
    implementation 'com.github.NLthijs48:BukkitDo:819d51ec2b'
    implementation 'io.papermc:paperlib:1.0.6'
    implementation 'io.github.baked-libs:dough-data:1.0.3'
    implementation ('com.google.inject:guice:5.0.1') {
        exclude group: 'com.google.guava'
    }
    implementation ('com.google.inject.extensions:guice-assistedinject:5.0.1') {
        exclude group: 'com.google.guava'
    }
    implementation project(':areashop-interface')
    implementation project(':areashop-bukkit-1_13')
    implementation project(':areashop-nms')
    runtimeOnly project(path: ':areashop-nms-1-17', configuration: 'reobf')
    runtimeOnly project(path: ':areashop-nms-1-18', configuration: 'reobf')
    implementation project(':areashop-worldedit-7')
    implementation project(':areashop-worldguard-7')
    implementation project(':areashop-fastasyncworldedit')
    compileOnly 'org.spigotmc:spigot-api:1.18.1-R0.1-SNAPSHOT'
    compileOnly ('com.sk89q.worldedit:worldedit-bukkit:7.2.8') {
        exclude group: 'com.google.guava'
    }
    compileOnly ('com.sk89q.worldguard:worldguard-bukkit:7.0.6') {
        exclude group: 'com.google.guava'
    }
    compileOnly ('com.github.MilkBowl:VaultAPI:1.7')
}

processResources {

    from (sourceSets.main.resources) {
        filter ReplaceTokens, tokens: [version: project.version]
        duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    }
}

assemble {
    dependsOn(shadowJar)
    dependsOn(publishToMavenLocal)
}

jar {
    archiveClassifier.set('original')
}

java {
    withSourcesJar()
}

shadowJar {
    archiveClassifier.set('')
    setArchivesBaseName('AreaShop')
    String base = "me.wiefferink.areashop.libraries"
    relocate('me.wiefferink.interactivemessenger', "${base}.interactivemessenger")
    relocate('me.wiefferink.bukkitdo', "${base}.bukkitdo")
    relocate('io.papermc.lib', "${base}.paperlib")
    relocate('io.github.bakedlibs.dough', "${base}.dough")
    relocate("com.google.inject", "${base}.inject")
    relocate("org.aopalliance", "${base}.aopalliance")
    relocate("javax.inject", "${base}.javax.inject")
    include {
        include("com.google.inject")
        minimize()
    }
}

sourcesJar {
    classifier('sources')
    from sourceSets.main.allSource
}

publishing {
    publications {
        // ... artifact publications
        areaShop(MavenPublication) {
            from components.java
            pom {
                group = "me.wiefferink"
                artifactId = "$project.name"
                version = "$project.version"
                scm {
                    connection = 'scm:git:git://github.com/md5sha256/AreaShop.git'
                    developerConnection = 'scm:git:ssh://github.com/md5sha256/AreaShop.git'
                    url = "https://github.com/md5sha256/AreaShop/tree/dev/bleeding"
                }
                licenses {
                    license {
                        name = 'GNU General Public License v3.0'
                        url = "https://github.com/md5sha256/AreaShop/blob/dev/bleeding/LICENSE"
                    }
                }
            }
        }
    }
}

description = 'AreaShop'
